meta {
    -theme-display-name: "Dark";
    -theme-interface-style: dark;
    -theme-vibrancy: vibrant;
    -theme-accent-color: auto;
}


/*
 * Window styles
 */
meta.window {
    border-color: hsla(0, 0%, 100%, 0.1);
}
meta.titlebar {
    color: hsl(210, 17%, 76%);
    border-color: hsla(0, 0%, 0%, 0.6);
}
meta.titlebar.inactive {
}

meta.button {
    background: linear-gradient(hsl(210, 5%, 32%), hsl(210, 5%, 25%));
    border: linear-gradient(hsl(210, 5%, 17%), hsl(210, 5%, 13%));
    color: white;
}
meta.button.highlighted {
    background: linear-gradient(hsl(210, 5%, 42%), hsl(210, 5%, 34%));
    color: white;
}
meta.button.selected {
    color: white;
}
meta.button.highlighted.selected {
    color: white;
}
meta.button.disabled {
    
}

meta.textfield {
    background-color: hsl(210, 5%, 13%);
    border-color: hsl(210, 5%, 23%);
}
meta.textfield.highlighted {
    background-color: hsl(210, 5%, 10%);
    border-color: hsl(210, 5%, 23%);
}

/*
 * Document styles
 */
meta.document {
    background-color: hsl(210, 5%, 11%);
    border-color: hsla(0, 0%, 100%, 0.1);
}

meta.document.button {
    background: linear-gradient(hsl(210, 5%, 25%), hsl(210, 5%, 21%));
    border: linear-gradient(hsl(210, 5%, 11%), hsl(210, 5%, 8%));
}
meta.document.button.disabled {
    background: linear-gradient(hsla(220, 5%, 25%, 0.3), hsla(220, 5%, 21%, 0.3));
}
meta.document.button.highlighted {
    background: linear-gradient(hsl(210, 5%, 34%), hsl(210, 5%, 30%));
}

meta.document.textfield {
    background-color: hsl(210, 5%, 10%);
    border-color: hsl(210, 5%, 19%);
}
meta.document.textfield.highlighted {
    background-color: hsl(210, 5%, 10%);
    border-color: hsl(210, 5%, 19%);
}

/* Text */
meta.text {
    color: hsl(210, 49%, 90%);
}
meta.text.invisible {
    color: hsla(210, 100%, 90%, 0.12);
}
meta.text.selected {
}

/* Cursor */
meta.cursor {
    background-color: hsl(210, 5%, 15%);
}

/* Indentation Guides */
meta.indentguide {
    border-color: hsla(220, 5%, 48%, 0.2);
}

/* Gutter */
meta.gutter {
    color: hsl(210, 5%, 38%);
}
meta.gutter.selected {
    background-color: hsl(210, 5%, 10%);
    color: hsl(210, 17%, 76%);
}


/*
 * Syntax styles
 */

keyword {
    color: hsl(210, 100%, 70%);
}
comment {
    color: hsl(210, 11%, 45%);
}
processing {
    color: hsl(210, 11%, 45%);
}
declaration {
    color: hsl(210, 11%, 45%);
}
bracket {
    color: hsl(210, 23%, 68%);
}
operator {
    color: hsl(210, 23%, 68%);
}
invalid {
    background-color: hsl(355, 91%, 57%);
    color: hsl(60, 33%, 96%);
}
link {
    color: hsl(210, 100%, 70%);
}

/* Values */
value.boolean {
    color: hsl(210, 100%, 70%);
}
value.null {
    color: hsl(210, 100%, 70%);
}
value.number {
    color: hsl(210, 100%, 70%);
}
value.entity {
    color: hsl(210, 100%, 70%);
}
value.symbol {
    color: hsl(210, 100%, 70%);
}

/* Identifiers */
identifier.type {
    color: hsl(258, 57%, 70%);
}
identifier.constant {
}
identifier.global, identifier.variable {
    color: hsl(268, 100%, 83%);
}
identifier.property,
identifier.decorator,
identifier.function,
identifier.method {
    color: hsl(166, 41%, 62%);
}
identifier.key {
    color: hsl(268, 100%, 83%);
}
identifier.argument {
    color: hsl(268, 100%, 83%);
}

/* Strings */
string {
    color: hsl(5, 100%, 68%);
}
string.key {
    color: hsl(210, 100%, 70%);
}
string-template {
    color: hsl(27, 100%, 70%);
}
string-template.value {
    color: hsl(27, 100%, 64%);
}
regex {
    color: hsl(40, 100%, 64%);
}
regex.escaped {
    color: hsl(27, 97%, 63%);
}
cdata {
    color: hsl(210, 100%, 70%);
}

/* Markup */
markup.heading {
    color: hsl(30, 50%, 60%);
}
markup.line {
    color: hsl(60, 43%, 56%);
}
markup.bold {
    color: hsl(196, 49%, 53%);
    font-weight: bold;
}
markup.italic {
    color: hsl(94, 44%, 64%);
    font-style: italic;
}
markup.strikethrough {
    color: hsl(0, 100%, 70%);
}
markup.list.item {
    color: hsl(30, 50%, 60%);
}
markup.code {
    background-color: rgba(128, 128, 128, 0.2);
}
markup.link {
    color: hsl(210, 100%, 70%);
}

/* Types */
definition.class class.name,
definition.type type.name,
definition.package package.name,
definition.enum enum.name,
definition.union union.name,
definition.struct struct.name {
    font-weight: bold;
    color: hsl(258, 57%, 70%);
}

/* Members */
definition.property property.name,
definition.function function.name,
definition.method method.name {
    color: hsl(210, 100%, 95%);
}

/* Tags */
tag {
    color: hsl(166, 41%, 62%);
}
tag.framework {
    color: hsl(258, 57%, 70%);
}
tag.attribute.name {
    color: hsl(95, 55%, 60%);
}
tag.attribute.value {
    color: hsl(5, 100%, 69%);
}
tag.attribute.value.link {
    color: hsl(210, 100%, 70%);
}

/* Styles */
style.at {
    color: hsl(25, 100%, 63%);
    font-weight: bold;
}
style.selector.element {
    font-weight: bold;
}
style.selector.identifier.id {
    color: hsl(166, 41%, 62%);
}
style.selector.identifier.class {
    color: hsl(258, 57%, 70%);
}
style.selector.pseudoclass {
    color: hsl(258, 57%, 70%);
}
style.selector.pseudoelement {
    color: hsl(166, 41%, 62%);
}
style.attribute.name {
    color: hsl(148, 29%, 58%);
}
style.value.number {
    color: hsl(249, 84%, 74%);
}
style.value.color.hex {
    color: hsl(249, 84%, 74%);
}
style.value.keyword {
    color: hsl(210, 100%, 70%);
}
style.value.color.named {
    color: hsl(210, 100%, 70%);
}
style.value.identifier.function {
    color: hsl(40, 100%, 64%);
}
